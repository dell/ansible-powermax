name: CI

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]
  schedule:
    - cron: '0 3 * * *'

jobs:
  build:
    name: Build collection
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        ansible-version: [stable-2.15, stable-2.16, stable-2.17, devel]
    steps:
      - name: Check out code
        uses: actions/checkout@v3

      - name: Set up Python 3.11
        uses: actions/setup-python@v4
        with:
          python-version: 3.11

      - name: Install ansible (${{ matrix.ansible-version }})
        run: pip install https://github.com/ansible/ansible/archive/${{ matrix.ansible-version }}.tar.gz --disable-pip-version-check

      - name: Build a collection tarball
        run: ansible-galaxy collection build --output-path "${GITHUB_WORKSPACE}/.cache/collection-tarballs"

      - name: Store migrated collection artifacts
        uses: actions/upload-artifact@v1
        with:
          name: collection
          path: .cache/collection-tarballs

  ###
  # Unit tests (OPTIONAL)
  #
  # https://docs.ansible.com/ansible/latest/dev_guide/testing_units.html

  unit:
    name: Unit Tests
    needs: [build]
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        python-version: ["3.10", "3.11"]
        ansible-version: [stable-2.15, stable-2.16, stable-2.17, devel]
        exclude:
        # Ansible-core 2.16 is supported only from Python 3.10 onwards
        - python-version: "3.10"
          ansible-version: devel


    steps:
      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v4
        with:
          python-version: ${{ matrix.python-version }}

      - name: Install ansible (${{ matrix.ansible-version }}) version
        run: pip install https://github.com/ansible/ansible/archive/${{ matrix.ansible-version }}.tar.gz --disable-pip-version-check

      - name: Download migrated collection artifacts
        uses: actions/download-artifact@v1
        with:
          name: collection
          path: .cache/collection-tarballs

      - name: Setup Unit test Pre-requisites
        run: |
          ansible-galaxy collection install .cache/collection-tarballs/*.tar.gz
          if [ -f /home/runner/.ansible/collections/ansible_collections/dellemc/powermax/tests/requirements.txt ]; then pip install -r /home/runner/.ansible/collections/ansible_collections/dellemc/powermax/tests/requirements.txt; fi

      - name: Run Unit tests using ansible-test
        run: ansible-test units -v --color --python ${{ matrix.python-version }} --coverage
        working-directory: /home/runner/.ansible/collections/ansible_collections/dellemc/powermax

  ###
  # Sanity tests (REQUIRED)
  #
  # https://docs.ansible.com/ansible/latest/dev_guide/testing_sanity.html

  sanity:
    name: Sanity Tests
    runs-on: ubuntu-latest
    needs: [build]
    strategy:
      fail-fast: false
      matrix:
        python-version: ["3.10", "3.11"]
        ansible-version: [stable-2.15, stable-2.16, stable-2.17, devel]
        exclude:
        # Ansible-core 2.16 is supported only from Python 3.10 onwards
        - python-version: "3.10"
          ansible-version: devel

    steps:
      - name: Set up Python 3.11
        uses: actions/setup-python@v4
        with:
          # it is just required to run that once as "ansible-test sanity" in the docker image
          # will run on all python versions it supports.
          python-version: 3.11

      - name: Install ansible (${{ matrix.ansible-version }}) version
        run: pip install https://github.com/ansible/ansible/archive/${{ matrix.ansible-version }}.tar.gz --disable-pip-version-check

      - name: Download migrated collection artifacts
        uses: actions/download-artifact@v1
        with:
          name: collection
          path: .cache/collection-tarballs

      - name: Setup Sanity test Pre-requisites
        run: ansible-galaxy collection install .cache/collection-tarballs/*.tar.gz

      # run ansible-test sanity inside of Docker.
      # The docker container has all the pinned dependencies that are required
      # and all python versions ansible supports.
      - name: Run sanity tests
        run: ansible-test sanity --docker -v --color
        working-directory: /home/runner/.ansible/collections/ansible_collections/dellemc/powermax

  lint:
    name: Ansible lint
    runs-on: ubuntu-latest
    needs: [build]
    strategy:
      fail-fast: false
      matrix:
        python-version: ["3.10", "3.11"]
        ansible-version: [stable-2.15, stable-2.16, stable-2.17, devel]
        exclude:
        # Ansible-core 2.16 is supported only from Python 3.10 onwards
        - python-version: "3.10"
          ansible-version: devel

    steps:
      # Important: This sets up your GITHUB_WORKSPACE environment variable
      - name: Checkout the source code
        uses: actions/checkout@v3
        with:
          fetch-depth: 0 # needed for progressive mode to work

      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v4
        with:
          python-version: ${{ matrix.python-version }}

      - name: Install ansible (${{ matrix.ansible-version }}) version
        run: pip install https://github.com/ansible/ansible/archive/${{ matrix.ansible-version }}.tar.gz --disable-pip-version-check

      - name: Install ansible lint
        run: pip install ansible-lint --disable-pip-version-check

      - name: Download migrated collection artifacts
        uses: actions/download-artifact@v1
        with:
          name: collection
          path: .cache/collection-tarballs

      - name: Install collection build
        run: ansible-galaxy collection install .cache/collection-tarballs/*.tar.gz

      - name: Run Ansible lint
        run: ansible-lint --show-relpath
        working-directory: /home/runner/work/ansible-powermax/ansible-powermax
