# This playbook illustrates the deletion of multiple volumes of a given storage group.
---
- name: Deletion of the multiple volumes
  hosts: localhost
  connection: local
  vars:
    unispherehost: 'your_unisphere_host_url'
    verifycert: false
    user: 'your_username'
    password: 'your_password'
    serial_no: "your_serial_no"
    sg_name: 'sample_storage_group'

  tasks:
  # This task collects the details of the storage group.
    - name: Get details of the Storage Group
      dellemc.powermax.storagegroup:
        unispherehost: "{{ unispherehost }}"
        verifycert: "{{ verifycert }}"
        user: "{{ user }}"
        password: "{{ password }}"
        serial_no: "{{ serial_no }}"
        sg_name: "{{ sg_name }}"
        state: "present"
      register: storage_details

  # The set_fact fetches the Id's of all the volumes from the storage group details and creates the list.
    - name: Assign a variable to the list of volume IDs
      ansible.builtin.set_fact:
        all_volumes_id: "{{ storage_details.storage_group_volumes | list }}"

  #  This task removes all the volumes from the storage group. vol_state attribute defines the state of the volume in a storage group.
    - name: Remove all volumes from the Storage Group
      dellemc.powermax.storagegroup:
        unispherehost: "{{ unispherehost }}"
        verifycert: "{{ verifycert }}"
        user: "{{ user }}"
        password: "{{ password }}"
        serial_no: "{{ serial_no }}"
        sg_name: "sample_storage_group"
        state: "present"
        volumes:
          - vol_id: "{{ item }}"
        vol_state: "absent-in-group"
      loop: "{{ all_volumes_Id }}"

  #  This task deletes the volumes which were removed from the storage group in the previous task.
    - name: Delete all the volumes
      dellemc.powermax.volume:
        unispherehost: "{{ unispherehost }}"
        verifycert: "{{ verifycert }}"
        user: "{{ user }}"
        password: "{{ password }}"
        serial_no: "{{ serial_no }}"
        vol_id: "{{ item }}"
        state: 'absent'
      loop: "{{ all_volumes_Id }}"
